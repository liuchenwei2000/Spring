<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans-4.0.xsd ">
	<!--
	Spring 中 Bean 的作用域允许配置所创建的 Bean 属于哪一种作用域，而无需在 Bean 的实现里硬编码作用域规则：
	
	singleton
	单例模式，在整个 Spring 容器中将只有一个实例。Spring 默认使用的作用域。
	单例的概念仅限于 Spring 上下文的范围内，不像真正的单例在每个类加载器中保证只有一个实例。
	
	prototype
	原型模式，每次通过容器的 getBean 方法获取的都是一个新的实例。
	Spring 仅仅创建 Bean 实例，一旦创建成功，容器不再跟踪实例，也不会维护 Bean 实例的状态。
	
	request
	对于每次 HTTP 请求都产生一个新实例。当请求响应结束后，该实例消失。
	实际上通常只会将 Web 应用的控制器 Bean 才指定成 request 作用域。
	仅在基于 Web 的 Spring 上下文（如 Spring MVC）中才有效。
	
	session
	对于每次 HTTP Session 都产生一个新实例。
	仅在基于 Web 的 Spring 上下文（如 Spring MVC）中才有效。
	
	global-session
	每个全局的 HTTP Session 对应一个 Bean 实例。
	仅在 Portlet 上下文中才有效。
	-->
	<bean id="default" class="bean.scope.Bean" />
	<bean id="singleton" class="bean.scope.Bean" scope="singleton" />
	<bean id="prototype" class="bean.scope.Bean" scope="prototype" />
</beans>         