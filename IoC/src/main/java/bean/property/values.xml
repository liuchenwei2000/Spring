<?xml version="1.0" encoding="UTF-8"?>
<!-- 
配置 <property> 时，如果 setter 方法的形参是基本类型、String、日期等，可直接使用 value 指定字面值即可。
如果形参是复合类（POJO），那就需要传入一个对象实例，要么使用 ref 引用一个容器中已配置的 Bean，要么使用 <bean> 临时配置一个嵌套 Bean。
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">
	<!--  
	Spring允许如下元素为Bean实例的属性指定值：
	value
	ref
	bean
	list、set、map以及props。
	-->
	<bean id="car" class="bean.alias.Car">
		<!--  
		<value> 元素用于指定基本类型及字符串类型的属性值。
		
		Spring 将数据从 XML 文件中解析出来之后，会利用 java.beans.PropertyEditor 完成类型转换：
		从 String 类型传换为所需的参数值类型。如果目标类型是基本数据类型，通常都可以正确转换。
		-->
		<property name="name" value="vic" />
	</bean>
	
	<bean id="walkman" class="bean.Walkman">
		<constructor-arg name="name" value="Sony" />
		<!--  
		如果需要为 Bean 配置的属性值是容器中的另一个 Bean 实例，则应该是用 <ref> 元素。
		<ref> 元素可指定如下属性：
		bean：引用在同一份 XML 配置文件中的其它 Bean 实例的 id 值。
		-->
		<property name="tape" ref="atape" />
	</bean>
	
	<bean id="atape" class="bean.Tape" />
	
	<bean id="walkman2" class="bean.Walkman">
		<constructor-arg name="name" value="Sony" />
		<!--  
		如果某个 Bean 不想被 Spring 容器直接访问，可以使用嵌套 Bean。
		嵌套 Bean 限制了 Bean 的访问，但提高了程序的内聚性。
		-->
		<property name="tape">
			<!-- 属性值为嵌套 Bean，因为不能由 Spring 容器直接访问，所以 Bean 可以没有 id 属性。 -->
			<bean class="bean.Tape" />
		</property>
	</bean>
</beans>         