
Spring把各种类型的文件、二进制流等统称为资源。在JDK标准API里，资源访问通常由java.net.URL和文件IO来完成。
Spring改进了Java资源访问的策略，它为资源访问提供了一个Resource接口，该接口提供了更强的资源访问能力，Spring框架自身大量使用了Resource来访问底层资源。

Resource接口本身没有提供放任任何底层资源的实现逻辑，针对不同的底层资源，Spring将会提供不同的Resource实现类，不同的实现类负责不同的资源访问逻辑。

Spring内置的Resource实现类如下：

UrlResource：访问网络资源的实现类。

ClassPathResource：访问类路径里资源的实现类。

FileSystemResource：访问文件系统里资源的实现类。

ServletContextResource：访问相对于ServletContext路径里的实现类。
ServletContextResource类来访问Web Context相对路径下的资源，其构造器接受一个代表资源位置的字符串参数，该资源位置是相对于Web应用根路径的位置。
使用ServletContextResource访问的资源，也可通过文件IO访问或URL访问。
通过java.io.File访问要求资源被解压缩，而且在本地文件系统中；但使用ServletContextResource进行访问时则无须关心资源是否被解压缩出来，
或者直接存放在JAR文件中，总可通过Servlet容器访问。

InputStreamResource：访问输入流资源的实现类。
InputStreamResource用来访问二进制输入流资源，只有当没有合适的Resource实现时，才考虑使用该类（比如从数据库中读取一个Blob对象）。

ByteArrayResource：访问字节数组资源的实现类。


Resource不仅可在Spring的项目中使用，也可直接作为资源访问的工具类使用。
